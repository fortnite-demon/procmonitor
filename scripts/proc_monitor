#!/usr/bin/env bash

#
# Monitors the process passed in the argument 
# to the script and sends a POST request 
# to https://test.com/monitoring/test/api
#
# By: Ilya S. 10 Mar. 2025
#

set -e

readonly LOG_FILE="/var/log/monitoring.log"
readonly API_SERVER="https://httpbin.org/post"
readonly PROCESS="$1"
readonly PROCESS_PID_FILE="$2"

err() {
    echo "[$(date +%Y-%d-%m)|$(date +%H:%M:%S)] ERROR: $*"
    exit 1
}

log() {
    echo "[$(date +%Y-%d-%m)|$(date +%H:%M:%S)]: $*" >> "${LOG_FILE}"
}

proc_is_running() {
    if pgrep -x "${PROCESS}" &>/dev/null; then
        return 0
    fi
    return 1
}

proc_is_restarted() {
    local current_pid=""
    current_pid="$(pgrep -x "${PROCESS}")"
    initial_pid="$(cat "${PROCESS_PID_FILE}")"

    if ! diff <(echo "${current_pid}") <(echo "${initial_pid}") &>/dev/null; then
        return 0
    fi
    return 1
}

send_post() {
    curl -XPOST "${API_SERVER}" \
         --connect-timeout 10 \
         -H 'Content-Type: application/json' \
         -d '{"process_status":"running"}' &>/dev/null
}

api_server_is_up() {
    local host=""
    host="$(echo "${API_SERVER}" | cut -d/ -f3)"
    if traceroute -T "${host}" &>/dev/null; then
        return 0
    fi
    return 1
}

main() {
    local log_file_dir=""
    log_file_dir="$(dirname "${LOG_FILE}")"

    if [[ ! -d "${log_file_dir}" ]]; then
        err "There is no directory for the log" \
            "file or it is not a directory." \
            "Dir: ${log_file_dir}"
    fi

    if [[ ! -w "${log_file_dir}" ]]; then
        err "No rights to write to the" \
            "directory for the log file." \
            "Dir: ${log_file_dir}"
    fi

    if [[ -f "${LOG_FILE}" ]]; then
        if [[ ! -w "${LOG_FILE}" ]]; then
            err "No rights to write to the log file: ${LOG_FILE}"
        fi
    else
        if ! touch "${LOG_FILE}"; then
            err "Failed to create a log file on the path: ${LOG_FILE}"
        fi
    fi

    if ! proc_is_running; then
        exit 1
    fi

    if api_server_is_up; then
        if ! send_post; then
            log "Error when trying to send a POST request. Server: ${API_SERVER}"
            exit 1
        fi
        log "POST request sent successfully! Server: ${API_SERVER}"
    else
        log "Api server is not up! Server: ${API_SERVER}"
    fi

    if proc_is_restarted; then
        log "The process has been restarted! Process: ${PROCESS}"
    fi
}

main
